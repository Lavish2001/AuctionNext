<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="http://localhost:1111/socket.io/socket.io.js"></script>
    <title>Document</title>

    <style>
        body {
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        #message {
            transition: all 2s ease-in-out;
        }

        .double {
            display: flex;
            width: 100%;
            justify-content: space-evenly;
        }

        .double2 {
            display: flex;
            flex-direction: column;
            width: 100%;
            justify-content: center;
            align-items: center;
        }

        .top-div {
            display: flex;
            padding-left: 20px;
            flex-direction: column;
            width: 100%;
            justify-content: start;
            position: fixed;
            top: 20px;
            z-index: -99;
        }

        a {
            display: flex;
            justify-content: center;
            font-size: 22px;
            font-family: 'Times New Roman', Times, serif;
            font-weight: 900;
            text-decoration: none;
            width: 200px;
            height: 16px;
            padding-bottom: 20px;
        }

        h1 {
            font-size: 40px;
            font-family: 'Times New Roman', Times, serif;
        }

        a {
            padding: 0.5rem 1rem;
            margin-top: 0.5rem;
            display: flex;
            width: 10rem;
            justify-content: center;
            align-items: center;
            background-color: #f2f2f2;
            border: 1px solid #ddd;
            border-radius: 5px;
            cursor: pointer;
            font-size: 1.2rem;
            font-weight: bold;
            color: #333;
            box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.2);
        }

        a:hover {
            background-color: rgb(58, 48, 48);
            color: white;
            transition: 0.4s;
        }

        .bid {
            padding: 0.5rem 1rem;
            margin-top: 0.5rem;
            display: flex;
            margin-left: 1rem;
            width: 10rem;
            justify-content: center;
            align-items: center;
            background-color: #333;
            border: 1px solid #ddd;
            border-radius: 5px;
            cursor: pointer;
            color: white;
            font-size: 1.2rem;
            font-weight: bold;
            box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.2);
        }

        .bid:hover {
            background-color: #f2f2f2;
            color: black;
            transition: 0.4s;
        }

        .msg {
            display: flex;
            margin-left: 1rem;
            width: 10rem;
            height: auto;
            justify-content: center;
            align-items: center;
            background-color: #333;
            border: 1px solid #ddd;
            border-radius: 5px;
            cursor: pointer;
            color: white;
            font-size: 1.2rem;
            font-weight: bold;
            box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.2);
        }

        .list2 {
            font-size: 23px;
            display: flex;
            height: auto;
            justify-content: start;
            align-items: center;
            font-family: 'Times New Roman', Times, serif;
        }


        /* .msg:hover {
            background-color: #f2f2f2;
            color: black;
            transition: 0.4s;
        } */


        .bidbtn {
            padding: 0.5rem 1rem;
            margin-top: 0.5rem;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 2rem;
            width: 10rem;
            background-color: #333;
            border: 1px solid #ddd;
            border-radius: 5px;
            cursor: pointer;
            font-size: 1rem;
            font-weight: bold;
            color: white;
            box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.2);
        }

        .bidbtn:hover {
            background-color: #f2f2f2;
            color: black;
            transition: 0.4s;
            border: 1px solid black;
        }

        .span {
            padding: 0.5rem 1rem;
            margin-top: 0.5rem;
            margin-left: 1rem;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 1.5rem;
            width: 8rem;
            background-color: #333;
            border: 1px solid #ddd;
            border-radius: 5px;
            cursor: pointer;
            font-size: 1.2rem;
            font-weight: bold;
            color: white;
            box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.2);
        }

        .span:hover {
            background-color: #f2f2f2;
            color: black;
            transition: 0.4s;
            border: 1px solid black;
        }

        .span2 {
            padding: 0.5rem 1rem;
            margin-top: 0.5rem;
            margin-right: 1rem;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 1.5rem;
            width: 8rem;
            background-color: #333;
            border: 1px solid #ddd;
            border-radius: 5px;
            cursor: pointer;
            font-size: 1.2rem;
            font-weight: bold;
            color: white;
            box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.2);
        }

        .span2:hover {
            background-color: #f2f2f2;
            color: black;
            transition: 0.4s;
            border: 1px solid black;
        }


        span {
            padding: 0.5rem 1rem;
            margin-left: 0.5rem;
            background-color: white;
            border: 1px solid #ddd;
            border-radius: 5px;
            cursor: pointer;
            font-size: 1.2rem;
            font-weight: bold;
            color: rgb(37, 36, 36);
            box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.2);
            width: 100%;
        }

        span:hover {
            background-color: rgb(58, 48, 48);
            color: white;
            transition: 0.4s;
        }

        img {
            height: 300px;
            width: 500px;
            border-radius: 5px;
        }

        .innermain {
            display: flex;
            flex-direction: column;
            margin-top: 1rem;
            background-color: #f2f2f2;
            box-shadow: 5px 10px 26px rgba(0, 0, 0, 0.2);
            border-radius: 5px;
        }

        .items {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 1rem 0 2rem 0;
            width: 100%;
        }

        h2 {
            height: 0.8rem;
            font-size: 23px;
            font-family: 'Times New Roman', Times, serif;
        }

        #main {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .user {
            display: flex;
            width: 40rem;
            flex-direction: column;
            margin-left: 5rem;
            border-radius: 5px;
            padding: 10px;
            justify-content: center;
            align-items: center;
        }

        .makebid {
            display: flex;
            margin-top: 5rem;
            flex-direction: column;
            box-shadow: 5px 10px 26px rgba(29, 27, 27, 0.2);
            width: 30rem;
            height: 6rem;
            background-color: #f2f2f2;
            border-radius: 5px;
            padding: 1rem;
        }

        .makebid2 {
            display: flex;
            margin-top: 5rem;
            flex-direction: column;
            box-shadow: 5px 10px 26px rgba(29, 27, 27, 0.2);
            width: 35rem;
            height: 4rem;
            background-color: #f2f2f2;
            border-radius: 5px;
            padding: 1rem;
        }


        .makebid5 {
            display: flex;
            margin-top: 5rem;
            flex-direction: column;
            box-shadow: 5px 10px 26px rgba(29, 27, 27, 0.2);
            width: 35rem;
            height: 4rem;
            background-color: #f2f2f2;
            border-radius: 5px;
            padding: 1rem;
        }

        h3 {
            height: 0.8rem;
            font-size: 23px;
            display: flex;
            justify-content: center;
            align-items: center;
            font-family: 'Times New Roman', Times, serif;
        }

        .list {
            height: 0.8rem;
            font-size: 23px;
            display: flex;
            justify-content: start;
            align-items: center;
            font-family: 'Times New Roman', Times, serif;
        }

        .make {
            display: flex;
            padding: 1rem;
            margin-top: 5rem;
            flex-direction: column;
            height: 24rem;
            width: 50%;
            align-items: center;
            background-color: #f2f2f2;
            box-shadow: 5px 10px 26px rgba(29, 27, 27, 0.2);
            overflow-y: scroll;
        }

        .make::-webkit-scrollbar {
            width: 5px;
            height: 5px;
        }

        .make::-webkit-scrollbar-thumb {
            background-color: #ccc;
            border-radius: 5px;
        }

        .make::-webkit-scrollbar-thumb:hover {
            background-color: #aaa;
        }

        .make::-webkit-scrollbar-track {
            background-color: #f2f2f2;
            border-radius: 5px;
        }

        .message {
            display: flex;
            padding: 1rem;
            margin-top: 5rem;
            flex-direction: column;
            height: 40rem;
            width: 50%;
            align-items: center;
            background-color: #f2f2f2;
            box-shadow: 5px 10px 26px rgba(29, 27, 27, 0.2);
            overflow-y: scroll;
        }

        .message::-webkit-scrollbar {
            width: 5px;
            height: 5px;
        }

        .message::-webkit-scrollbar-thumb {
            background-color: #ccc;
            border-radius: 5px;
        }

        .message::-webkit-scrollbar-thumb:hover {
            background-color: #aaa;
        }

        .message::-webkit-scrollbar-track {
            background-color: #f2f2f2;
            border-radius: 5px;
        }

        input {
            width: 20rem;
            height: 1.6rem;
            margin-left: 10px;
            border-radius: 5px;
            outline: none;
            font-size: 20px;
        }
    </style>
</head>

<body>
    <a onclick="leave(event)"> Leave </a>
    <div class="top-div">

    </div>
    <h1>
        Welcome, In Live Auction.
    </h1>
    <div class="double">
        <div id="main">

        </div>
        <div id="make" class="make">

        </div>

        <div class="double2">
            <div class="makebid">
                <h3> message : <input id="chat" type="text"> </input> </h3>
                <div style="display:flex; justify-content:center;"> <button onclick="send(event)" class="bidbtn"> OK
                    </button> </div>
            </div>
            <div id="message" class="message">

            </div>
        </div>


    </div>

</body>

<script>

    const socket = io('http://localhost:1111');

    const leave = (e) => {
        e.preventDefault();
        fetch('/details').then((res) => {
            if (res.status === 200) {
                return res.json().then((res) => {
                    socket.emit("user-leave-auction", res.data.username);
                    window.location.href = "/welcome"
                })
            }
        })
    };

    let bidding;

    socket.on('send-detail', data => {
        alert(`${data} Joined the Auction`)
    });

    socket.on('auction-results', data => {
        localStorage.setItem('auction', data);
        alert(`auction Closed Click to see Auction Results`);
        return window.location.href = "/results"
    });

    socket.on('leave-detail', data => {
        alert(`${data} Leave the Auction`)
    })

    socket.on('send-bid', data => {
        bidding = data;

        document.getElementById("message").innerHTML = `
                ${bidding.Chat.length ? `${bidding.Chat.sort((a, b) => { return a.createdAt > b.createdAt ? 1 : -1 }).map((item) => {
            return `
                    <h3 class="list2"> ${item.sender.username} : <a class="msg"> ${item.text} </a> </h3>
                    `
        }).join('')}` : ` <h3 class="list"> <a class="bid"> ! No Messages </a> </h3>`}
                `;

        const scrollingElement = (document.getElementById("message"));
        scrollingElement.scrollTop = scrollingElement.scrollHeight;

        var filterData = bidding.Bidding.reduce((pre, curr) => {
            return (pre.bid_amount > curr.bid_amount) ? pre : curr
        });
        bidding.Bidding.length ? document.getElementById('makebid2').innerHTML = `
        <h3> Highest Bid : ${filterData.Bidder.username} <span class="span"> Price : ${filterData.bid_amount} $ </span> </h3>
        ` : `No One Bid <span class="span"> Price : 0 $ </span>`;
        const sorted = bidding.Bidding.sort((a, b) => {
            return (a.bid_amount > b.bid_amount) ? -1 : 1;
        })
        sorted.length ?
            document.getElementById("make").innerHTML = `
              ${sorted.map((item) => {
                return `
<h3 class="list2"> ${item.Bidder.username} <a class="msg">Price : ${item.bid_amount} $</a> </h3>
`
            }).join('')}
                ` : document.getElementById("make").innerHTML = `
                <h3 class="list"> <a class="bid"> ! No Bids </a> </h3>
                `;

        const scrollingElementBid = (document.getElementById("make"));
        scrollingElementBid.scrollHeight = scrollingElementBid.scrollTop;


        bidding.Bidding.length ? document.getElementById('special').innerHTML = `
        Highest Bid : <span> ${filterData.bid_amount} $ </span>
        ` : `No One Bid <span> 0 $ </span>`;

    });


    let bidId;
    fetch('/get-auction-item').then((res) => {
        if (res.status === 200) {
            return res.json().then((res) => {
                if (res.data.Bidding.length) {
                    var filterData = res.data.Bidding.reduce((pre, curr) => {
                        return (pre.bid_amount > curr.bid_amount) ? pre : curr
                    });
                };
                bidId = res.data.id;
                document.getElementById("make").innerHTML = `
                ${res.data.Bidding.length ? `${res.data.Bidding.sort((a, b) => { return a.bid_amount > b.bid_amount ? -1 : 1 }).map((item) => {
                    return `
                    <h3 class="list2"> ${item.Bidder.username} <a class="msg">Price : ${item.bid_amount} $</a> </h3>
                    `
                }).join('')}` : ` <h3 class="list"> <a class="bid"> ! No Bids </a> </h3>`}
                `;

                const scrollingElementBid = (document.getElementById("make"));
                scrollingElementBid.scrollHeight = scrollingElementBid.scrollTop;

                var date = Date.now();
                setInterval(() => {
                    date = Date.now();
                    let minutes = Math.floor((new Date(res.data.ended_at).getTime() - date) / 60000);
                    let seconds = Math.floor(((new Date(res.data.ended_at).getTime() - date) % 60000) / 1000);
                    if ((new Date(res.data.ended_at).getTime() - date) <= 0) {
                        return fetch('create-pdf', {
                            method: 'POST',
                            headers: {
                                'Accept': 'application/json',
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                id: bidId
                            })
                        }).then((res) => {
                            if (res.status === 200) {
                                return res.json().then((res) => {
                                    alert(res.message);
                                    return window.location.href = '/welcome'
                                })
                            } else {
                                return res.json().then((res) => {
                                    alert(res.message)
                                }).catch((err) => {
                                    alert(err.message)
                                })
                            }
                        })
                    }
                    document.getElementById("minutes").innerHTML = `
                    Minutes Left :  ${minutes < 5 ? `<span style="color: red;"> ${minutes} : ${seconds < 10 ? `0${seconds}` : seconds} </span>` : `<span> ${minutes} : ${seconds < 10 ? `0${seconds}` : seconds} </span>`}
                    `
                }, 1000)
                document.getElementById('main').innerHTML = `
               <div class="innermain"> 
                <img src=http://localhost:9000/Images/${res.data.Item.image}> </img>
                <div class="items">
                    <h2> Item Name : <span> ${res.data.Item.item_name} </span> </h2>
                    <h2> Description : <span> ${res.data.Item.description} </span> </h2>
                    <h2> Base Price : <span> ${res.data.Item.base_price} $ </span> </h2>
                    <h2 id="special"> ${res.data.Bidding.length ? `Highest Bid : <span> ${filterData.bid_amount} $</span> ` : ` Highest Bid :<span> ! No one bid </span>`} </h2>
                    <h2 id="minutes">  </h2>
                    </div>
                </div>

                <div class="user">
                    <div class="makebid">
                    <h3> Make Bid : <input id="bid" type="number"> </input> </h3>
                   <div style="display:flex; justify-content:center;"> <button onclick="update(event)" class="bidbtn"> OK </button> </div>
                    <div>

                        <div id="makebid2" class="makebid2">
                    <h3> Highest Bid : ${res.data.Bidding.length ? `${filterData.Bidder.username} <span class="span"> Price : ${filterData.bid_amount} $ </span>` : `No One Bid <span class="span"> Price : 0 $ </span>`} </h3>
                    <div>

                    </div>
                `

                document.getElementById("message").innerHTML = `
                ${res.data.Chat.length ? `${res.data.Chat.sort((a, b) => { return a.createdAt > b.createdAt ? 1 : -1 }).map((item) => {
                    return `
                    <h3 class="list2"> ${item.sender.username} : <a class="msg"> ${item.text} </a> </h3>
                    `
                }).join('')}` : ` <h3 class="list"> <a class="bid"> ! No Messages </a> </h3>`}
                `;

                const scrollingElement = (document.getElementById("message"));
                scrollingElement.scrollTop = scrollingElement.scrollHeight;


            })
        } else {
            return res.json().then((res) => {
                alert(res.message);
                window.location.href = "/welcome"
            }).catch((err) => {
                alert(err.message);
                window.location.href = "/welcome"
            })
        }
    });


    const update = (e) => {
        e.preventDefault();
        let bid = document.getElementById("bid").value;
        document.getElementById("bid").value = null;
        fetch('update-auction-item', {
            method: 'PATCH',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                id: bidId,
                bid: bid
            })
        }).then((res) => {
            if (res.status === 200) {
                return res.json().then((res) => {
                    fetch('/get-auction-item').then((res) => {
                        if (res.status === 200) {
                            return res.json().then((res) => {
                                socket.emit('bid-message', res.data);
                            })
                        } else {
                            return res.json().then((res) => {
                                alert(res.message)
                            }).catch((err) => {
                                alert(err.message)
                            })
                        }
                    })
                })
            } else {
                return res.json().then((res) => {
                    alert(res.message);
                    socket.emit('user-error', res.message);

                }).catch((err) => {
                    alert(err.message)
                })
            }
        })
    }


    const send = (e) => {
        e.preventDefault();
        let text = document.getElementById("chat").value;
        document.getElementById("chat").value = null;
        fetch('send-message', {
            method: 'POST',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                id: bidId,
                text: text
            })
        }).then((res) => {
            if (res.status === 200) {
                return res.json().then((res) => {
                    fetch('/get-auction-item').then((res) => {
                        if (res.status === 200) {
                            return res.json().then((res) => {
                                socket.emit('bid-message', res.data);
                            })
                        } else {
                            return res.json().then((res) => {
                                alert(res.message)
                            }).catch((err) => {
                                alert(err.message)
                            })
                        }
                    })
                })
            } else {
                return res.json().then((res) => {
                    alert(res.message);
                    socket.emit('user-error', res.message);

                }).catch((err) => {
                    alert(err.message)
                })
            }
        })
    }

</script>

</html>